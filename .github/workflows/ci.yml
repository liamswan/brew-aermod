name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-formulas:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Homebrew on Linux
        if: runner.os == 'Linux'
        uses: Homebrew/actions/setup-homebrew@master

      - name: Update Homebrew
        run: brew update

      - name: Add tap
        run: |
          brew tap liamswan/brew-aermod "$(pwd)"

      - name: Brew audit (parallel)
        run: |
          # Create a list of formulas
          formulas=(Formula/*.rb)
          echo "Found ${#formulas[@]} formulas to audit"
          
          # Run audits in parallel with a maximum of 4 concurrent processes
          pids=()
          formula_names=()
          
          for f in "${formulas[@]}"; do
            formula_name="$(basename "$f" .rb)"
            formula_names+=("$formula_name")
            echo "Starting audit for liamswan/brew-aermod/$formula_name"
            brew audit "liamswan/brew-aermod/$formula_name" > "audit_${formula_name}.log" 2>&1 &
            pids+=($!)
            
            # Limit concurrent processes
            if [ ${#pids[@]} -ge 4 ]; then
              wait "${pids[0]}"
              exit_code=$?
              if [ $exit_code -ne 0 ]; then
                echo "Error: Audit failed for ${formula_names[0]}"
                cat "audit_${formula_names[0]}.log"
                exit 1
              fi
              pids=("${pids[@]:1}")
              formula_names=("${formula_names[@]:1}")
            fi
          done
          
          # Wait for remaining processes
          for i in "${!pids[@]}"; do
            pid=${pids[$i]}
            name=${formula_names[$i]}
            wait "$pid"
            exit_code=$?
            if [ $exit_code -ne 0 ]; then
              echo "Error: Audit failed for $name"
              cat "audit_${name}.log"
              exit 1
            fi
          done
          
          # Display all logs
          for f in "${formulas[@]}"; do
            formula_name="$(basename "$f" .rb)"
            echo "=== Audit log for $formula_name ==="
            cat "audit_${formula_name}.log" || true
          done

      - name: Install formulas
        run: |
          # First install only dependencies
          for f in Formula/*.rb; do
            brew install --build-from-source --only-dependencies "$f" || exit 1
          done
          # Then install the formulas themselves
          for f in Formula/*.rb; do
            echo "Installing $(basename "$f")"
            brew install --build-from-source "$f" || exit 1
          done

      - name: Run tests
        run: |
          for f in Formula/*.rb; do
            formula_name="$(basename "$f" .rb)"
            echo "Testing $formula_name"
            brew test "$formula_name" || echo "Warning: Test failed for $formula_name but continuing"
          done
