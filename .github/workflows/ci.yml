
name: CI

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-formulas:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Homebrew (official)
        uses: Homebrew/actions/setup-homebrew@master

      - name: Update Homebrew
        run: brew update

      - name: Tap the repository
        run: |
          brew tap liamswan/aermod https://github.com/liamswan/homebrew-aermod

      - name: Link local repo to tap
        if: runner.os == 'macOS' || runner.os == 'Linux'
        run: |
          TAPDIR="$(brew --repository)/Library/Taps/liamswan/aermod"
          rm -rf "$TAPDIR"
          mkdir -p "$(dirname "$TAPDIR")"
          ln -s "$(pwd)" "$TAPDIR"
          echo "Tap directory: $TAPDIR"
          ls -la "$TAPDIR"

      - name: Brew audit
        run: |
          formulas=(Formula/*.rb)
          echo "Found \${#formulas[@]} formulas to audit"
          any_failures=0
          failed_formulas=()

          for f in "\${formulas[@]}"; do
            formula_name="\$(basename "\$f" .rb)"
            echo "Starting audit for formula: \$formula_name"
            if ! brew audit --strict "\$formula_name"; then
              echo "Error: Audit failed for \$formula_name"
              any_failures=1
              failed_formulas+=("\$formula_name")
            else
              echo "Audit passed for \$formula_name"
            fi
          done

          if [ \$any_failures -ne 0 ]; then
            echo "========== AUDIT FAILURES =========="
            for failure in "\${failed_formulas[@]}"; do
              echo "- \$failure"
            done
            echo "====================================="
            exit 1
          fi

      - name: Brew style
        run: |
          formulas=(Formula/*.rb)
          echo "Found \${#formulas[@]} formulas to style check"
          any_failures=0
          failed_formulas=()

          for f in "\${formulas[@]}"; do
            formula_name="\$(basename "\$f" .rb)"
            echo "Starting style check for formula: \$formula_name"
            if ! brew style --fix "\$formula_name"; then
              echo "Warning: Style issues found for \$formula_name"
              any_failures=1
              failed_formulas+=("\$formula_name")
            else
              echo "Style check passed for \$formula_name"
            fi
          done

          if git diff --quiet -- Formula/; then
            echo "No style fixes were applied"
          else
            echo "Style fixes were applied. Changes below:"
            git --no-pager diff -- Formula/
          fi

          if [ \$any_failures -ne 0 ]; then
            echo "========== STYLE CHECK FAILURES =========="
            for failure in "\${failed_formulas[@]}"; do
              echo "- \$failure"
            done
            echo "========================================"
            echo "Some style issues could not be automatically fixed."
          fi

      - name: Install formulas
        run: |
          failed_formulas=()
          echo "Installing dependencies and formulas"

          for f in Formula/*.rb; do
            formula_name="\$(basename "\$f" .rb)"
            echo "Installing dependencies for \$formula_name"
            if ! brew install --build-from-source --only-dependencies "\$formula_name"; then
              echo "Warning: Failed to install dependencies for \$formula_name"
              failed_formulas+=("\$formula_name (dependencies)")
            fi
          done

          if [ -f "Formula/aermod-suite.rb" ]; then
            echo "Installing aermod-suite..."
            if ! brew install --build-from-source aermod-suite; then
              echo "Warning: Failed to install aermod-suite"
              failed_formulas+=("aermod-suite (installation)")
            fi
          fi

          for f in Formula/*.rb; do
            formula_name="\$(basename "\$f" .rb)"
            if [ "\$formula_name" = "aermod-suite" ]; then
              continue
            fi
            if brew list aermod-suite &>/dev/null; then
              if [[ "\$formula_name" =~ ^(aermap|aermet|aermod)\$ ]]; then
                echo "Skipping \$formula_name (installed by aermod-suite)"
                continue
              fi
            fi
            echo "Installing \$formula_name"
            if ! brew install --build-from-source "\$formula_name"; then
              echo "Warning: Failed to install \$formula_name"
              failed_formulas+=("\$formula_name (installation)")
            fi
          done

          if [ \${#failed_formulas[@]} -gt 0 ]; then
            echo "========== INSTALLATION FAILURES =========="
            for failure in "\${failed_formulas[@]}"; do
              echo "- \$failure"
            done
            echo "==========================================="
            exit 1
          fi

      - name: Run tests
        run: |
          failed_tests=()

          if brew list aermod-suite &>/dev/null; then
            echo "Testing AERMOD Suite components..."
            for component in aermod aermet aermap; do
              if ! which "\$component" &>/dev/null; then
                echo "Error: \$component executable not found in PATH"
                failed_tests+=("aermod-suite (\$component missing)")
              else
                echo "âœ“ Found \$component"
                version_output="\$("\$component" 2>&1 | grep -i version || echo "Version not found")"
                echo "  \$component version: \$version_output"
              fi
            done
            tested_via_suite=(aermod aermet aermap)
          else
            tested_via_suite=()
          fi

          for f in Formula/*.rb; do
            formula_name="\$(basename "\$f" .rb)"
            if [[ " \${tested_via_suite[*]} " =~ " \$formula_name " ]]; then
              echo "Skipping test for \$formula_name (covered by suite)"
              continue
            fi
            if brew list "\$formula_name" &>/dev/null; then
              echo "Testing \$formula_name"
              if ! brew test "\$formula_name"; then
                echo "Warning: Test failed for \$formula_name"
                failed_tests+=("\$formula_name")
              fi
            else
              echo "Skipping test for \$formula_name (not installed)"
            fi
          done

          if [ \${#failed_tests[@]} -gt 0 ]; then
            echo "========== TEST FAILURES =========="
            for failure in "\${failed_tests[@]}"; do
              echo "- \$failure"
            done
            echo "==================================="
            exit 1
          fi
